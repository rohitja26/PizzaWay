{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { thunk } from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getAllPizzasReducer } from \"./reducers/pizzaReducers\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { loginUserReducer, registerUserReducer } from \"./reducers/userReducer\";\nimport { placeOrderReducer } from \"./reducers/orderReducer\";\nconst finalReducers = combineReducers({\n  getAllPizzasReducer: getAllPizzasReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n  placeOrderReducer: placeOrderReducer\n});\nconst cartItems = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst currentUser = localStorage.getItem(\"currentUser\") ? JSON.parse(localStorage.getItem(\"currentUser\")) : null;\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  },\n  loginUserReducer: {\n    currentUser: currentUser\n  }\n};\nconst composeEnhancer = composeWithDevTools({});\nconst store = createStore(finalReducers, initialState, composeEnhancer(applyMiddleware(thunk)) // Apply Redux Thunk middleware\n);\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","combineReducers","thunk","composeWithDevTools","getAllPizzasReducer","cartReducer","loginUserReducer","registerUserReducer","placeOrderReducer","finalReducers","cartItems","localStorage","getItem","JSON","parse","currentUser","initialState","composeEnhancer","store"],"sources":["C:/Users/user/OneDrive/Desktop/projects(MERN)/Mern Pizza/client/src/store.js"],"sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { thunk } from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { getAllPizzasReducer } from \"./reducers/pizzaReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport { loginUserReducer, registerUserReducer } from \"./reducers/userReducer\";\r\nimport { placeOrderReducer } from \"./reducers/orderReducer\";\r\n\r\nconst finalReducers = combineReducers({\r\n  getAllPizzasReducer: getAllPizzasReducer,\r\n  cartReducer: cartReducer,\r\n  registerUserReducer: registerUserReducer,\r\n  loginUserReducer: loginUserReducer,\r\n  placeOrderReducer: placeOrderReducer,\r\n});\r\n\r\nconst cartItems = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst currentUser = localStorage.getItem(\"currentUser\")\r\n  ? JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  : null;\r\nconst initialState = {\r\n  cartReducer: {\r\n    cartItems: cartItems,\r\n  },\r\n  loginUserReducer: {\r\n    currentUser: currentUser,\r\n  },\r\n};\r\n\r\nconst composeEnhancer = composeWithDevTools({});\r\n\r\nconst store = createStore(\r\n  finalReducers,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk)) // Apply Redux Thunk middleware\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,wBAAwB;AAC9E,SAASC,iBAAiB,QAAQ,yBAAyB;AAE3D,MAAMC,aAAa,GAAGR,eAAe,CAAC;EACpCG,mBAAmB,EAAEA,mBAAmB;EACxCC,WAAW,EAAEA,WAAW;EACxBE,mBAAmB,EAAEA,mBAAmB;EACxCD,gBAAgB,EAAEA,gBAAgB;EAClCE,iBAAiB,EAAEA;AACrB,CAAC,CAAC;AAEF,MAAME,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC/CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAEN,MAAMG,WAAW,GAAGJ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,GACnDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,GAC/C,IAAI;AACR,MAAMI,YAAY,GAAG;EACnBX,WAAW,EAAE;IACXK,SAAS,EAAEA;EACb,CAAC;EACDJ,gBAAgB,EAAE;IAChBS,WAAW,EAAEA;EACf;AACF,CAAC;AAED,MAAME,eAAe,GAAGd,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAE/C,MAAMe,KAAK,GAAGnB,WAAW,CACvBU,aAAa,EACbO,YAAY,EACZC,eAAe,CAACjB,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC;AAC1C,CAAC;AAED,eAAegB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}