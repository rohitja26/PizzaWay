{"ast":null,"code":"// import { createStore, applyMiddleware, combineReducers } from \"redux\";\n\n// import { thunk } from \"redux-thunk\";\n\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import { getAllPizzasReducer } from \"./reducers/pizzaReducers\";\n\n// const finalReducers = combineReducers({\n//   getAllPizzasReducer: getAllPizzasReducer,\n// });\n\n// const initialState = {};\n\n// const composeEnhancer = composeWithDevTools({});\n\n// const store = createStore(\n//   finalReducers,\n//   initialState,\n//   composeEnhancer(applyMiddleware(thunk))\n// );\n// export default store;\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { thunk } from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getAllPizzasReducer } from \"./reducers/pizzaReducers\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nconst finalReducers = combineReducers({\n  getAllPizzasReducer: getAllPizzasReducer,\n  cartReducer: cartReducer\n});\nconst cartItems = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst initialState = {\n  cartReducer: {\n    cartItem: cartItems\n  }\n};\nconst composeEnhancer = composeWithDevTools({});\nconst store = createStore(finalReducers, initialState, composeEnhancer(applyMiddleware(thunk)) // Apply Redux Thunk middleware\n);\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","combineReducers","thunk","composeWithDevTools","getAllPizzasReducer","cartReducer","finalReducers","cartItems","localStorage","getItem","JSON","parse","initialState","cartItem","composeEnhancer","store"],"sources":["C:/Users/user/OneDrive/Desktop/projects(MERN)/Mern Pizza/client/src/store.js"],"sourcesContent":["// import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\n\r\n// import { thunk } from \"redux-thunk\";\r\n\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import { getAllPizzasReducer } from \"./reducers/pizzaReducers\";\r\n\r\n// const finalReducers = combineReducers({\r\n//   getAllPizzasReducer: getAllPizzasReducer,\r\n// });\r\n\r\n// const initialState = {};\r\n\r\n// const composeEnhancer = composeWithDevTools({});\r\n\r\n// const store = createStore(\r\n//   finalReducers,\r\n//   initialState,\r\n//   composeEnhancer(applyMiddleware(thunk))\r\n// );\r\n// export default store;\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { thunk } from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { getAllPizzasReducer } from \"./reducers/pizzaReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\n\r\nconst finalReducers = combineReducers({\r\n  getAllPizzasReducer: getAllPizzasReducer,\r\n  cartReducer: cartReducer,\r\n});\r\n\r\nconst cartItems = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\nconst initialState = {\r\n  cartReducer: {\r\n    cartItem: cartItems,\r\n  },\r\n};\r\n\r\nconst composeEnhancer = composeWithDevTools({});\r\n\r\nconst store = createStore(\r\n  finalReducers,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk)) // Apply Redux Thunk middleware\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,MAAMC,aAAa,GAAGL,eAAe,CAAC;EACpCG,mBAAmB,EAAEA,mBAAmB;EACxCC,WAAW,EAAEA;AACf,CAAC,CAAC;AAEF,MAAME,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC/CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AACN,MAAMG,YAAY,GAAG;EACnBP,WAAW,EAAE;IACXQ,QAAQ,EAAEN;EACZ;AACF,CAAC;AAED,MAAMO,eAAe,GAAGX,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAE/C,MAAMY,KAAK,GAAGhB,WAAW,CACvBO,aAAa,EACbM,YAAY,EACZE,eAAe,CAACd,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC;AAC1C,CAAC;AAED,eAAea,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}